
import java.sql.Connection;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Blob;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fazal
 */
public class Miller_Sell extends javax.swing.JFrame {
    Connection conn;
    Timer timer;
    public static int Sec=60;

    /**
     * Creates new form Miller_Sell
     */
    public Miller_Sell() throws ClassNotFoundException, SQLException {
        initComponents();
        dbConn();
        showBoughtProducts();
    }
    void dbConn() throws ClassNotFoundException, SQLException{
        Class.forName("com.mysql.cj.jdbc.Driver");
        conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/auction","root","roott");
       // System.out.println("Connected");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_millerBoughtItem = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txt_ownerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_itemName = new javax.swing.JTextField();
        txt_quan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_resPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_showImage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_auction = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lbl_timer = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("My Products");

        tbl_millerBoughtItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Image", "Owner Name", "Item Name", "Quantity", "Bought Price", "Winner Name", "Sold Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_millerBoughtItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_millerBoughtItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_millerBoughtItem);

        jLabel2.setText("Owner Name");

        jLabel3.setText("Item Name");

        jLabel4.setText("Quantity");

        jLabel5.setText("Reserved Price");

        jLabel6.setText("Item Image");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setText("Miller Sell Panel");

        btn_auction.setText("Start Auction");
        btn_auction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_auctionActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel8.setText("TIMER : ");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4))
                            .addGap(43, 43, 43)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_resPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addGap(18, 18, 18)
                            .addComponent(jButton3)
                            .addGap(57, 57, 57)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(39, 39, 39)
                        .addComponent(lbl_showImage)
                        .addGap(18, 18, 18)
                        .addComponent(txt_ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_auction)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(112, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(lbl_timer)
                .addGap(126, 126, 126))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jLabel7)
                    .addContainerGap(710, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(lbl_showImage))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txt_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_quan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txt_resPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lbl_timer))
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addComponent(btn_auction)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(jLabel7)
                    .addContainerGap(585, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_millerBoughtItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_millerBoughtItemMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel) tbl_millerBoughtItem.getModel();
        int row = tbl_millerBoughtItem.getSelectedRow();
        
      /*  byte[] img = (byte[]) tm.getValueAt(row, 0);
        ImageIcon imageIcon = new ImageIcon(img);
        Image im = imageIcon.getImage();
        Image newImg = im.getScaledInstance(lbl_showImage.getHeight(), lbl_showImage.getWidth(), Image.SCALE_SMOOTH);
        ImageIcon finalPic = new ImageIcon(newImg);
        */
        
        String oName = (String) tm.getValueAt(row, 1);
        String iName = (String) tm.getValueAt(row, 2);
        String quan = (String) tm.getValueAt(row, 3);
       // int resPrice = (int) tm.getValueAt(row, 4);
        
        txt_ownerName.setText(oName);
        txt_itemName.setText(iName);
        txt_quan.setText(quan);
        //txt_resPrice.setText(String.valueOf((resPrice)));
       // lbl_showImage.setIcon(finalPic);
        
    }//GEN-LAST:event_tbl_millerBoughtItemMouseClicked

    private void btn_auctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_auctionActionPerformed
        // TODO add your handling code here:
        String oName = txt_ownerName.getText();
        String iName = txt_itemName.getText();
        String quan = txt_quan.getText();
        String resPrice = txt_resPrice.getText();
        
        try {
            Statement stmt = conn.createStatement();
            String insertQ = ("INSERT INTO mAuctioned_item values('"+oName+"', '"+iName+"', '"+quan+"', '"+resPrice+"')");
            stmt.execute(insertQ);
            stmt.close();
            JOptionPane.showMessageDialog(null, "Your Auction Has Started", "Auction Started", 1);
            
            startTimer();
            timer.start();
            
            txt_itemName.setText("");
            txt_ownerName.setText("");
            txt_resPrice.setText("");
            txt_quan.setText("");
            
        } catch (SQLException ex) {
            Logger.getLogger(Miller_Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_auctionActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Miller_Option().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Main_Login().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Miller_Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Miller_Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Miller_Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Miller_Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Miller_Sell().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Miller_Sell.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Miller_Sell.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    /*Getting the details from fAddedProduct to store in Miller_bought_Product
    public void getBoughtProducts(){
        try {
            Statement stmt= conn.createStatement();
            String millerBoughtProducts = "INSERT INTO miller_bought_product (ItemImage, OwnerName, ItemName, Quantity, BoughtPrice)"
                    + "SELECT Image, Winner_Name, ItemName, Quantity, SoldPrice FROM faddproduct";
            stmt.executeUpdate(millerBoughtProducts);
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(Miller_Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }*/
    
    //Showing the miller Bought Products in the Jtable
    public void showBoughtProducts(){
        try {
            DefaultTableModel tm = (DefaultTableModel) tbl_millerBoughtItem.getModel();
            
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM miller_bought_product") ;
            while(rs.next()){
                Blob img = rs.getBlob("ItemImage");
                String oName = rs.getString("OwnerName");
                String iName = rs.getString("ItemName");
                String quan = rs.getString("Quantity");
                int bPrice = rs.getInt("BoughtPrice");
                String wName = rs.getString("Winner_Name");
                String sPrice = rs.getString("SoldPrice");
                
                tm.addRow(new Object[]{ img, oName, iName, quan, bPrice,wName,sPrice });
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Miller_Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    void startTimer(){
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Sec--;
                if(Sec==-1){
                    timer.stop();
                }
                else if(Sec>=0&&Sec<10) lbl_timer.setText("00:0"+Sec);
                else lbl_timer.setText("00:"+Sec);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_auction;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_showImage;
    private javax.swing.JLabel lbl_timer;
    private javax.swing.JTable tbl_millerBoughtItem;
    private javax.swing.JTextField txt_itemName;
    private javax.swing.JTextField txt_ownerName;
    private javax.swing.JTextField txt_quan;
    private javax.swing.JTextField txt_resPrice;
    // End of variables declaration//GEN-END:variables
}
